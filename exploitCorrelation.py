import matplotlib.pyplot as plt
import os
import sys
import pandas as pd
import numpy as np
import pdb

DATA_DIR = "data"
TRAIN_FN = "train.csv"
TEST_FN  = "test.csv"

def main(argv=[]):
    train = getTrainDataframe()
    train = train.select_dtypes([np.number])
    features = train.columns
    corrLowerbound = 0.5

    for i, feat in enumerate(features):
        corr = getSortedCorrelationGreaterThanBound(train, feat, corrLowerbound)
        if len(corr)>1:
            print(corr)
            print("")

    printTwoFeaturesComparison(train, "OverallQual", "SalePrice")

def printTwoFeaturesComparison(dataframe, feature1, feature2):
    plt.scatter(x=dataframe[feature1], y=dataframe[feature2])
    plt.xlabel(feature1)
    plt.ylabel(feature2)
    plt.show()

def getSortedCorrelationGreaterThanBound(train, featureLabel, lowerbound):
    corr = getSortedCorrelationOfFeature(train, featureLabel)
    return corr[corr > lowerbound]

def getSortedCorrelationOfFeature(train, featureLabel):
    corr = train.corr()
    corr = corr[featureLabel].sort_values(ascending=False)
    return corr

def plot_corr(df,size=80):
    '''Function plots a graphical correlation matrix for each pair of columns in the dataframe.

    Input:
        df: pandas DataFrame
        size: vertical and horizontal size of the plot'''

    corr = df.corr()#['YrSold']
    fig, ax = plt.subplots(figsize=(size, size))
    ax.matshow(corr)
    plt.xticks(range(len(corr.columns)), corr.columns);
    plt.yticks(range(len(corr.columns)), corr.columns);
    plt.show()

def getAllDataframeWithNoSalePrices():
    train = getTrainDataframe()
    test  = getTestDataframe()
    allData = pd.concat([train, test], sort=False)
    return allData.drop('SalePrice', axis=1)

def getTrainDataframe():
    filepath = os.path.join(DATA_DIR, TRAIN_FN)
    return pd.read_csv(filepath)

def getTestDataframe():
    filepath = os.path.join(DATA_DIR, TEST_FN)
    return pd.read_csv(filepath)

if __name__=="__main__":
    main(sys.argv)
